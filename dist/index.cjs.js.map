{"version":3,"file":"index.cjs.js","sources":["../src/bem.js","../src/index.js"],"sourcesContent":["export const BEM = (block) => (elem, mods) => {\n  let base = `.${block}`;\n\n  if (!elem) {\n    return base;\n  }\n\n  // Handle multiple bases e.g. comma-separated elements.\n  let bases = [base];\n\n  if (typeof elem === 'object') {\n    mods = elem;\n    elem = '';\n  }\n\n  if (elem !== '') {\n    bases = elem.split(',').map(elem => {\n      return `.${block}__${elem.trim()}`;\n    });\n  }\n\n  return bases.map(base => {\n    return mods ? Object.entries(mods).reduce((target, [key, value]) => {\n      if (!value) {\n        return target;\n      }\n\n      target += `${value === true ? (`${base}--${key}`) : (`${base}--${key}-${value}`)}`;\n\n      return target;\n    }, '') : base;\n  }).join(', ');\n};\n","import postcss from 'postcss';\nimport { BEM } from './bem';\n\nconst DEFAULT_OPTIONS = {\n  component: 'component',\n  element: 'elem',\n  modifier: 'mod',\n  modifierRegExp: /([\\w\\-]+)(?:\\[([\\w\\-| ]+)\\])?/\n};\n\nexport default postcss.plugin('postcss-bike', (options = DEFAULT_OPTIONS) => {\n  options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n  return (root) => {\n    const process = (node) => {\n      if (node.nodes.length === 0) {\n        return node;\n      }\n\n      if (node.name === options.component) {\n        node.metadata = { bem: BEM(node.params), type: options.component };\n      }\n\n      let selectors = [];\n\n      node.metadata.names = node.metadata.name ? node.metadata.name.split(',').map(val => val.trim()) : [''];\n      node.metadata.names.forEach(metaName => {\n        switch (node.metadata.type) {\n          case options.component:\n            selectors.push(node.metadata.bem());\n            break;\n          case options.modifier:\n            let [, modName, modVals = true] = metaName.match(options.modifierRegExp);\n\n            // Handle possible multiple comma-delimited modifier values.\n            modVals = typeof modVals === 'string' ? modVals.split('|').map(val => val.trim()) : [modVals];\n            modVals.forEach(modVal => {\n              node.metadata.mods = { [modName]: modVal };\n\n              if (node.parent.metadata.type === options.element) {\n                selectors.push(node.metadata.bem(node.parent.metadata.name, { [modName]: modVal }));\n              } else if (node.parent.metadata.type === options.modifier) {\n                selectors.push(node.metadata.bem({ ...node.parent.metadata.mods, [modName]: modVal }));\n              } else {\n                selectors.push(node.metadata.bem({ [modName]: modVal }));\n              }\n            });\n            break;\n          case options.element:\n            if (node.parent.metadata.type === options.modifier) {\n              node.parent.selectors.forEach(parentSelector => {\n                selectors.push([parentSelector, node.metadata.bem(metaName)].join(' '));\n              });\n            } else {\n              selectors.push(node.metadata.bem(metaName));\n            }\n            break;\n        }\n      });\n\n      const rule = postcss.rule({\n        raws: { semicolon: true },\n        selectors: selectors,\n        source: node.source,\n        metadata: node.metadata\n      });\n\n      node.walkDecls(decl => {\n        const declClone = postcss.decl({\n          raws: { before: '\\n  ', between: ': ' },\n          source: decl.source,\n          prop: decl.prop,\n          value: decl.value\n        });\n\n        decl.replaceWith(declClone);\n      });\n\n      rule.append(node.nodes);\n      node.remove();\n      root.append(rule);\n\n      rule.walkAtRules(child => {\n        if (![options.element, options.modifier].includes(child.name)) {\n          return;\n        }\n\n        child.metadata = {\n          type: child.name,\n          name: child.params,\n          bem: rule.metadata.bem,\n        };\n\n        return process(child);\n      });\n    };\n\n    root.walkAtRules(options.component, process);\n  };\n})\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,GAAG,GAAG,CAAC,KAAK,KAAK,CAAC,IAAI,EAAE,IAAI,KAAK;AAC9C,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AACzB;AACA,EAAE,IAAI,CAAC,IAAI,EAAE;AACb,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;AACrB;AACA,EAAE,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAChC,IAAI,IAAI,GAAG,IAAI,CAAC;AAChB,IAAI,IAAI,GAAG,EAAE,CAAC;AACd,GAAG;AACH;AACA,EAAE,IAAI,IAAI,KAAK,EAAE,EAAE;AACnB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI;AACxC,MAAM,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACzC,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI;AAC3B,IAAI,OAAO,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK;AACxE,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,OAAO,MAAM,CAAC;AACtB,OAAO;AACP;AACA,MAAM,MAAM,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF;AACA,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;AAClB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChB,CAAC;;AC7BD,MAAM,eAAe,GAAG;AACxB,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,OAAO,EAAE,MAAM;AACjB,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,cAAc,EAAE,+BAA+B;AACjD,CAAC,CAAC;AACF;AACA,YAAe,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,OAAO,GAAG,eAAe,KAAK;AAC7E,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;AACxD;AACA,EAAE,OAAO,CAAC,IAAI,KAAK;AACnB,IAAI,MAAM,OAAO,GAAG,CAAC,IAAI,KAAK;AAC9B,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACnC,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP;AACA,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,SAAS,EAAE;AAC3C,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC;AAC3E,OAAO;AACP;AACA,MAAM,IAAI,SAAS,GAAG,EAAE,CAAC;AACzB;AACA,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAC7G,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,IAAI;AAC9C,QAAQ,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI;AAClC,UAAU,KAAK,OAAO,CAAC,SAAS;AAChC,YAAY,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;AAChD,YAAY,MAAM;AAClB,UAAU,KAAK,OAAO,CAAC,QAAQ;AAC/B,YAAY,IAAI,GAAG,OAAO,EAAE,OAAO,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACrF;AACA;AACA,YAAY,OAAO,GAAG,OAAO,OAAO,KAAK,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC1G,YAAY,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI;AACtC,cAAc,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAE,CAAC,OAAO,GAAG,MAAM,EAAE,CAAC;AACzD;AACA,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,OAAO,CAAC,OAAO,EAAE;AACjE,gBAAgB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;AACpG,eAAe,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,OAAO,CAAC,QAAQ,EAAE;AACzE,gBAAgB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;AACvG,eAAe,MAAM;AACrB,gBAAgB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;AACzE,eAAe;AACf,aAAa,CAAC,CAAC;AACf,YAAY,MAAM;AAClB,UAAU,KAAK,OAAO,CAAC,OAAO;AAC9B,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,OAAO,CAAC,QAAQ,EAAE;AAChE,cAAc,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,IAAI;AAC9D,gBAAgB,SAAS,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACxF,eAAe,CAAC,CAAC;AACjB,aAAa,MAAM;AACnB,cAAc,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC1D,aAAa;AACb,YAAY,MAAM;AAClB,SAAS;AACT,OAAO,CAAC,CAAC;AACT;AACA,MAAM,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAChC,QAAQ,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;AACjC,QAAQ,SAAS,EAAE,SAAS;AAC5B,QAAQ,MAAM,EAAE,IAAI,CAAC,MAAM;AAC3B,QAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC/B,OAAO,CAAC,CAAC;AACT;AACA,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI;AAC7B,QAAQ,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;AACvC,UAAU,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE;AACjD,UAAU,MAAM,EAAE,IAAI,CAAC,MAAM;AAC7B,UAAU,IAAI,EAAE,IAAI,CAAC,IAAI;AACzB,UAAU,KAAK,EAAE,IAAI,CAAC,KAAK;AAC3B,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACpC,OAAO,CAAC,CAAC;AACT;AACA,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;AACpB,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACxB;AACA,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI;AAChC,QAAQ,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACvE,UAAU,OAAO;AACjB,SAAS;AACT;AACA,QAAQ,KAAK,CAAC,QAAQ,GAAG;AACzB,UAAU,IAAI,EAAE,KAAK,CAAC,IAAI;AAC1B,UAAU,IAAI,EAAE,KAAK,CAAC,MAAM;AAC5B,UAAU,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG;AAChC,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;AAC9B,OAAO,CAAC,CAAC;AACT,KAAK,CAAC;AACN;AACA,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACjD,GAAG,CAAC;AACJ,CAAC;;;;"}